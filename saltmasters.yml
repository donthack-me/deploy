---
- hosts: saltmasters
  remote_user: root

  tasks:
    - include_vars: .openstack_config.yml

    - name: Remove RAX default PasswordAuthentication
      replace:
        dest: /etc/ssh/sshd_config
        regexp: ".*PasswordAuthentication yes$"

    - name: Disable Password Authentication
      lineinfile:
        dest: /etc/ssh/sshd_config
        line: "PasswordAuthentication no"
      notify:
      - restart sshd

    - name: Add Salt Stack repository
      apt_repository:
        repo: "deb http://debian.saltstack.com/debian jessie-saltstack main"
        state: present

    - name: Add Salt Stack signing key
      apt_key:
        url: "http://debian.saltstack.com/debian-salt-team-joehealy.gpg.key"
        state: present

    - name: Install Salt Master
      apt:
        name: "{{ item }}"
        state: installed
        update_cache: yes
      with_items:
        - python-git
        - salt-master
        - salt-cloud

    - name: Configure Salt Master
      replace:
        dest: /etc/salt/master
        regexp: "^#interface: 0.0.0.0$"
        replace: "interface: {{ansible_eth2.ipv4.address }}"

    - name: Configure Salt Master GitFS
      blockinfile:
        dest: /etc/salt/master
        block: |
          fileserver_backend:
            - git
          gitfs_remotes:
            - https://github.com/saltstack-formulas/salt-formula.git
            - https://github.com/saltstack-formulas/docker-formula.git

    - shell: "[ -f /etc/salt/pki/minion/minion.pem ]"
      register: key_exists
      ignore_errors: True

    - shell: "[ -f /etc/salt/pki/minion/minion.pub ]"
      register: pub_key_exists
      ignore_errors: True

    - name: Create Minion Key Folder
      file:
        dest: /etc/salt/pki/minion
        state: directory

    - name: Create Minion Keys
      shell: "cd /etc/salt/pki/minion; /usr/bin/salt-key --gen-keys=minion"
      when: key_exists|failed or pub_key_exists|failed
      register: keys_created

    - name: preseed key
      command: cp /etc/salt/pki/minion/minion.pub /etc/salt/pki/master/minions/salt.donthack.me creates="/etc/salt/pki/master/minions/salt.donthack.me.pub"
      when: keys_created|success
      notify: restart minion

    - name: Salt-Cloud Providers Config
      template:
        src: rackspace.conf.j2
        dest: /etc/salt/cloud.providers.d/rackspace.conf  

    - name: Salt-Cloud Profiles Config
      template:
        src: rackspace_profiles.conf.j2
        dest: /etc/salt/cloud.profiles.d/rackspace.conf

    - name: Install Salt Minion
      apt:
        name: salt-minion
        state: installed
        update_cache: yes

    - name: Configure Salt Minion's Master
      replace:
        dest: /etc/salt/minion
        regexp: "^master:.*$"
        replace: "master: {{ saltmaster }}"

    - name: Configure Salt Minion Grain
      blockinfile:
        dest: /etc/salt/minion
        block: |
          grains:
            roles:
              - saltmaster
            region: dfw

    - name: start Salt Minion
      service:
        name: salt-minion
        enabled: yes
        state: started

    - name: start Salt Master
      service: 
        name: salt-master
        enabled: yes
        state: started

  handlers:
    - name: restart sshd
      service:
        name: sshd
        state: restarted
    - name: restart minion
      service:
        name: salt-minion
        state: restarted
      notify: restart master
    - name: restart master
      service:
        name: salt-master
        state: restarted

